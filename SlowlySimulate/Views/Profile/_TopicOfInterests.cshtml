@using Microsoft.AspNetCore.Mvc.TagHelpers
@model SlowlySimulate.Api.ViewModels.Profile.TopicViewModel

<style>
    body {
        background-color: #f8f9fa;
    }

    .container {
        margin-top: 5px;
    }

    .add-subtopic-btn,
    .get-subtopics-btn,
    .btn-primary {
        margin-bottom: 5px;
    }

    .header {
        background-color: #007bff;
        color: #ffffff;
        padding: 15px;
        text-align: center;
    }

    .table-container {
        max-height: 400px;
        overflow-y: auto;
        margin-top: 20px;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 10px;
    }

    th, td {
        padding: 15px;
        border-bottom: 1px solid #dee2e6;
        text-align: left;
    }

    th {
        background-color: #007bff;
        color: #ffffff;
    }

    .form-check-input {
        margin-top: 6px;
    }

    .add-subtopic-btn {
        background-color: #28a745;
        color: #ffffff;
    }

    .add-subtopic-btn:hover {
        background-color: #218838;
    }

    #apiToast {
        position: fixed;
        bottom: 20px;
        right: 20px;
        width: 300px;
    }

    .modal-dialog {
        max-width: 500px;
    }

    .modal-content {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .modal-header {
        background-color: #007bff;
        color: #ffffff;
        padding: 15px;
    }

    .modal-body {
        padding: 20px;
    }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
    }

    .btn-primary:hover {
        background-color: #0056b3;
        border-color: #0056b3;
    }
</style>

<div class="container">
    <div class="header">
        <h2>Topic of Interests</h2>
    </div>

    @using (Html.BeginForm("AddTopicOfInterest", "Profile", FormMethod.Post, new { id = "topicForm" }))
    {
        <div class="row">
            <div class="col-md-12">
                <div class="table-container table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col" style="color: #007bff">Topics</th>
                                <th scope="col"></th>
                                <th scope="col"></th>
                            </tr>
                        </thead>
                        <tbody>
                        @foreach (var topic in Model.FixedTopics)
                        {
                            <tr>
                                <td>@topic.Name</td>
                                <td>
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input" name="topicIds" value="@topic.Id"
                                               @(Model.UserTopics.Any(ut => ut.Id == topic.Id) ? "checked" : "") />
                                    </div>
                                </td>
                                <td>
                                    <button class="btn btn-primary add-subtopic-btn" data-toggle="modal" data-target="#addSubtopicModal"
                                            data-topic-id="@topic.Id" data-topic-name="@topic.Name">
                                        <i class="bi bi-plus"></i> Add Subtopic
                                    </button>
                                    <button class="btn btn-success get-subtopics-btn" data-topic-id="@topic.Id">
                                        Get Subtopics
                                    </button>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="row mt-3">
            <div class="col-md-12">
                <button type="submit" class="btn btn-primary">Save</button>
            </div>
        </div>
    }

</div>

<!-- Subtopics Modal -->
<div class="modal" id="subtopicsModal" tabindex="-1" role="dialog" aria-labelledby="subtopicsModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="subtopicsModalLabel">Subtopics</h5>
                <button type="button" class="btn-close" data-dismiss="modal" id="closesubtopicsModal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="subtopicsModalContent">
                <!-- Subtopic names will be dynamically inserted here -->
            </div>
        </div>
    </div>
</div>

<!-- Add Subtopic Modal -->
<div class="modal fade" id="addSubtopicModal" tabindex="-1" role="dialog" aria-labelledby="addSubtopicModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addSubtopicModalLabel">Add Subtopic</h5>
                <button type="button" class="btn-close" aria-label="Close" id="closeAddSubtopicModal"></button>
            </div>
            <div class="modal-body">
                <!-- Add Subtopic Form -->
                <form id="addSubtopicForm">
                    <div class="mb-3">
                        <label for="subtopicName" class="form-label">Subtopic Name</label>
                        <input type="text" class="form-control" id="subtopicName" name="SubTopicName">
                    </div>
                    <div class="mb-3">
                        <label for="subtopicList" class="form-label">Select Topic</label>
                        <select class="form-select" id="subtopicList" name="TopicId">
                            @foreach (var topic in Model.FixedTopics)
                            {
                                <option value="@topic.Id">@topic.Name</option>
                            }
                        </select>
                    </div>
                    <button type="button" class="btn btn-primary" id="addSubtopicBtn">Add Subtopic</button>
                </form>
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {

        $('#topicForm').submit(function (e) {
                e.preventDefault();

            $.ajax({
                url: this.action,
                type: this.method,
                data: $(this).serialize(),
                success: function (response) {

                    if (response.statusCode === 200) {
                        showSuccessAlert(response.message, { autoClose: true, timeout: 3000 });

                    } else {
                        showErrorAlert(response.message, { autoClose: true, timeout: 3000 });
                    }

                },
                error: function (xhr) {
                    showErrorAlert(xhr.responseJSON, { autoClose: true, timeout: 3000 });
                }
            });
            });

        $('.add-subtopic-btn').click(function (e) {
                e.preventDefault(); // Prevent the default behavior

                var topicId = $(this).data('topic-id');
                var topicName = $(this).data('topic-name');

                // Set the selected topic for the current row
                $('#subtopicList').val(topicId);

                // Show the modal
                $('#addSubtopicModal').modal('show');
            });

        $('#closeAddSubtopicModal').click(function () {
                $('#addSubtopicModal').modal('hide');
            });

        $('#closesubtopicsModal').click(function () {
                $('#subtopicsModal').modal('hide');
            });

        $('#addSubtopicBtn').click(function () {

            $.ajax({
                url: '/Profile/AddSubTopic',
                type: 'POST',
                data: $('#addSubtopicForm').serialize(),
                success: function (response) {
                   
                    // Close the modal only if the request was successful
                    if (response.statusCode === 200) {
                        $('#addSubtopicModal').modal('hide');
                        showSuccessAlert(response.message, { autoClose: true, timeout: 3000 });
                    }
                },
                error: function (xhr) {

                    showErrorAlert(xhr.responseJSON, { autoClose: true, timeout: 3000 });
                }
            });
        });

        $('.get-subtopics-btn').click(function (e) {
            e.preventDefault();
            var topicId = $(this).data('topic-id');

            // Perform AJAX request to get subtopics
            $.ajax({
                url: '/Profile/GetSubTopics',
                type: 'GET',
                data: { topicId: topicId },
                success: function (subtopics) {
                    if (subtopics.result.length === 0) {
                        showErrorAlert("it is empty.", { autoClose: true, timeout: 3000 });
                        return;
                    }
                    showSubtopicsModal(subtopics.result);
                },
                error: function (xhr) {
                    showErrorAlert(xhr.responseJSON, { autoClose: true, timeout: 3000 });
                }
            });
        });

        function showSubtopicsModal(subtopics) {
                // Clear previous modal content
                $('#subtopicsModalContent').empty();

                // Append subtopic names to the modal content
                subtopics.forEach(function (subtopic) {
                    $('#subtopicsModalContent').append('<p>' + subtopic.name + '</p>');
                });

                // Show the modal
                $('#subtopicsModal').modal('show');
            }  
    });
 </script>
