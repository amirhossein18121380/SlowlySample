@model List<Topic>


<style>
    .modal-body {
        max-height: 400px;
        overflow-y: auto;
    }
    .table-container {
        max-height: 400px; /* Set your preferred height */
        overflow-y: auto;
    }
</style>

<h2>Topics</h2>

<p>
    <a id="createTopicBtn" class="btn btn-primary">Create Topic</a>
</p>

@if (Model != null && Model.Count > 0)
{
    <div class="table-container table-responsive">
        <table class="table table-striped">
            <thead>
            <tr>
                <th>Name</th>
                <th>Action</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var topic in Model)
            {
                <tr>
                    <td>@topic.Name</td>
                    <td>
                        <button class="btn btn-info edit-topic-btn" data-topic-id="@topic.Id">Edit</button>
                        <button class="btn btn-danger delete-topic-btn"
                                data-topic-name="@topic.Name"
                                data-topic-id="@topic.Id">
                            Delete
                        </button>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="alert alert-info" role="alert">
        No Topic found.
    </div>
}



<div class="modal fade" id="createTopicModal" tabindex="-1" role="dialog" aria-labelledby="createTopicModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createTopicModalLabel">Create Topic</h5>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="topicName">Topic Name:</label>
                    <input type="text" class="form-control" id="topicName" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="closeCreateModal" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveTopicBtn">Save</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="confirmDeleteModal" tabindex="-1" role="dialog" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Confirm Delete Topic</h5>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this topic?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="closeDeleteModal" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="updateTopicModal" tabindex="-1" role="dialog" aria-labelledby="updateTopicModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateTopicModalLabel">Update Topic</h5>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="topicNameUpdate">Topic Name:</label>
                    <input type="text" class="form-control" id="topicNameUpdate" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="closeUpdateModal" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveUpdateTopicBtn">Save</button>
            </div>
        </div>
    </div>
</div>


@section scripts {

    <script>
        $(document).ready(function () {

            $('#createTopicBtn').click(function () {
                $('#topicName').val('');
                $('#createTopicModal').modal('show');
            });
            $('#saveTopicBtn').click(function () {
                var topicName = $('#topicName').val();

                var topicDto = {
                    TopicName: topicName
                };
                var topicDtoJson = JSON.stringify(topicDto);
                
                $.ajax({
                    url: '@Url.Action("Create", "Topic")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: topicDtoJson,
                    success: function (response) {

                        if (response.statusCode === 200) {
                            showSuccessAlert(response.message, { autoClose: true, timeout: 1000 });
                            // Delay the reload after 2 seconds
                            setTimeout(function () {
                                location.reload();
                            }, 1000);
                        } else {
                            showErrorAlert(response.message, { autoClose: false });
                            location.reload();
                        }
                    }
                });
            });
            $('#closeCreateModal').click(function () {
                $('#createTopicModal').modal('hide');
            });
            
            $('.delete-topic-btn').on('click', function () {
                var $deleteBtn = $(this);
                var topicName = $deleteBtn.data('topic-name');
                var topicId = $deleteBtn.data('topic-id');

                // Set data directly on the confirmDeleteBtn
                $('#confirmDeleteBtn').data({
                    'topic-name': topicName,
                    'topic-id': topicId
                });

                // Use string interpolation to set the modal body content
                $('#confirmDeleteModal .modal-body').html(`<p>Are you sure you want to delete the topic <strong>${topicName}</strong>?</p>`);

                $('#confirmDeleteModal').modal('show');
            });
            $('#confirmDeleteBtn').on('click', function () {
                var topicId = $(this).data('topic-id');
                
                $.ajax({
                    url: '@Url.Action("DeleteTopic", "Topic")',
                    type: 'DELETE',
                    contentType: 'application/json',
                    data: JSON.stringify({ TopicId: topicId }), // Remove the JSON.stringify
                    success: function (response) {
                        if (response.statusCode === 200) {
                            showSuccessAlert(response.message, { autoClose: true, timeout: 2000 });

                            setTimeout(function () {
                                location.reload();
                            }, 2000);
                        } else {
                            showErrorAlert(response.message, { autoClose: false });
                            location.reload();
                        }
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.error('Error:', textStatus, errorThrown);
                    }
                });

                $('#confirmDeleteModal').modal('hide');
            });
            $('#cancelDeleteBtn, #closeDeleteModal').on('click', function () {
                $('#confirmDeleteModal').modal('hide');
            });


            $('#closeUpdateModal').click(function () {
                $('#updateTopicModal').modal('hide');
            });
            $('.edit-topic-btn').on('click', function () {
                var topicId = $(this).data('topic-id');
                
                $.ajax({
                    url: '@Url.Action("GetById", "Topic")' + '?topicId=' + topicId,
                    type: 'GET',
                    //data: JSON.stringify({ TopicId: topicId }),
                    success: function (data) {
                        $('#topicNameUpdate').val(data.result.name);
                        $('#updateTopicModal').data('topic-id', topicId);
                        $('#updateTopicModal').modal('show');
                        if (data.statusCode !== 200) {
                            showErrorAlert(data.message, { autoClose: false, timeout: 3000 });
                        }
                    }
                });
            });
            $('#saveUpdateTopicBtn').on('click', function () {
                var topicName = $('#topicNameUpdate').val();
                var topicId = $('#updateTopicModal').data('topic-id');

                $.ajax({
                    url: '@Url.Action("Edit", "Topic")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ topicName: topicName, topicId: topicId }),
                    success: function (response) {
                        if (response.statusCode === 200) {
                            showSuccessAlert(response.message, { autoClose: true, timeout: 2000 });

                            setTimeout(function () {
                                location.reload();
                            }, 2000);
                        } else {
                            showErrorAlert(response.message, { autoClose: false });
                        }
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.error('Error:', textStatus, errorThrown);
                    }
                });
                $('#updateTopicModal').modal('hide');
            });
            
        });
    </script>
}