@model List<Topic>


<style>
    .modal-body {
        max-height: 400px;
        overflow-y: auto;
    }
</style>

<h2>Roles</h2>

<p>
    <a id="createRoleBtn" class="btn btn-primary">Create Role</a>
</p>

@if (Model != null && Model.Count > 0)
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var topic in Model)
            {
                <tr>
                    <td>@topic.Name</td>
                    <td>
                        <button class="btn btn-info edit-topic-btn" data-topic-name="@topic.Name">Edit</button>
                        <button class="btn btn-danger delete-topic-btn" data-topic-name="@topic.Name" data-topic-id="@topic.Id">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No Topic found.</p>
}

<div class="modal fade" id="createTopicModal" tabindex="-1" role="dialog" aria-labelledby="createTopicModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createRoleModalLabel">Create Topic</h5>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="topicName">Topic Name:</label>
                    <input type="text" class="form-control" id="topicName" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="closeCreateModal" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveTopicBtn">Save</button>
            </div>
        </div>
    </div>
</div>



<div class="modal fade" id="confirmDeleteModal" tabindex="-1" role="dialog" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Confirm Delete Topic</h5>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this topic?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="closeDeleteModal" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="updateTopicModal" tabindex="-1" role="dialog" aria-labelledby="updateTopicModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateTopicModalLabel">Update Topic</h5>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="topicNameUpdate">Topic Name:</label>
                    <input type="text" class="form-control" id="topicNameUpdate" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="closeUpdateModal" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveUpdateTopicBtn">Save</button>
            </div>
        </div>
    </div>
</div>


@section scripts {

    <script>
        $(document).ready(function () {

            $('#createTopicBtn').click(function () {
                $('#topicName').val('');
            });

            $('#saveTopicBtn').click(function () {
                var topicName = $('#topicName').val();
               
                // var roleDto = {
                //     Name: roleName,
                //     Permissions: selectedPermissions
                // };
                // var roleDtoJson = JSON.stringify(roleDto);

                $.ajax({
                    url: '@Url.Action("Create", "Topic")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: { TopicName: topicName },  // Use the stringified JSON data
                    success: function (response) {

                        if (response.statusCode === 200) {
                            showSuccessAlert(response.message, { autoClose: true, timeout: 2000 });
                            // Delay the reload after 2 seconds
                            setTimeout(function () {
                                location.reload();
                            }, 2000);
                        } else {
                            showErrorAlert(response.message, { autoClose: false });
                            location.reload();
                        }
                    }
                });
            });

            $('#closeCreateModal').click(function () {
                $('#createTopicModal').modal('hide');
            });

            $('.delete-topic-btn').on('click', function () {
                var topicName = $(this).data('topic-name');
                $('#confirmDeleteModal .modal-body').html('<p>Are you sure you want to delete the topic <strong>' + topicName + '</strong>?</p>');
                $('#confirmDeleteModal').modal('show');
                $('#confirmDeleteBtn').data('topic-name', topicName);
            });

            $('#confirmDeleteBtn').on('click', function () {
                var topicName = $(this).data('topic-name');
                var topicId = $(this).data('topic-id');
                
                $.ajax({
                    url: '@Url.Action("Delete", "Topic")',
                    type: 'DELETE',
                    contentType: 'application/json',
                    data: JSON.stringify({ topicId: topicId }),
                    success: function (response) {
                        if (response.statusCode === 200) {
                            showSuccessAlert(response.message, { autoClose: true, timeout: 2000 });
                            // Delay the reload after 2 seconds
                            setTimeout(function () {
                                location.reload();
                            }, 2000);
                        } else {
                            showErrorAlert(response.message, { autoClose: false });
                            location.reload();
                        }
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        // Handle error if needed
                        console.error('Error:', textStatus, errorThrown);
                    }
                });

                // Hide the confirmation modal
                $('#confirmDeleteModal').modal('hide');
            });

            $('#cancelDeleteBtn, #closeDeleteModal').on('click', function () {
                $('#confirmDeleteModal').modal('hide');
            });
            
            
            
            
            
            

            $('#closeUpdateModal').click(function () {
                $('#updateRoleModal').modal('hide');
            });

            $('.edit-role-btn').on('click', function () {
                var roleName = $(this).data('role-name');

                // Fetch role details using AJAX
                $.ajax({
                    url: '@Url.Action("GetRoleDto", "Role")',
                    type: 'GET',
                    data: { roleName: roleName },
                    success: function (data) {
                        // Populate the update role modal with existing data
                        $('#roleNameUpdate').val(data.result.name);

                        // Clear previous checkboxes in the list
                        $('#permissionsCheckboxListUpdate').empty();

                        if (data.statusCode !== 200) {
                            showErrorAlert(data.message, { autoClose: false, timeout: 3000 });
                        }

                        // Fetch permissions using AJAX
                        $.ajax({
                            url: '@Url.Action("GetPermissions", "Role")',
                            type: 'GET',
                            success: function (permissions) {

                                if (permissions.statusCode !== 200) {
                                    showErrorAlert(data.message, { autoClose: false, timeout: 3000 });
                                }
                                else {
                                    // Populate the checkbox list with permissions
                                    $.each(permissions.result, function (index, permission) {
                                        var checkbox = $('<div class="custom-control custom-checkbox"></div>');
                                        checkbox.append('<input type="checkbox" class="custom-control-input" id="chkPermissionUpdate' + index + '" value="' + permission + '" />');
                                        checkbox.append('<label class="custom-control-label" for="chkPermissionUpdate' + index + '">' + permission + '</label>');

                                        // Check the checkbox if the role has this permission
                                        if (data.result.permissions.includes(permission)) {
                                            checkbox.find('input').prop('checked', true);
                                        }

                                        $('#permissionsCheckboxListUpdate').append(checkbox);
                                    });

                                    // Show the update role modal
                                    $('#updateRoleModal').modal('show');
                                }
                            }
                        });
                    }
                });
            });

            $('#saveUpdateRoleBtn').on('click', function () {
                // Collect updated data from the modal
                var roleName = $('#roleNameUpdate').val();
                var selectedPermissions = [];

                // Collect selected permissions
                $('input:checked', '#permissionsCheckboxListUpdate').each(function () {
                    selectedPermissions.push($(this).val());
                });

                var roleDtoUpdate = {
                    Name: roleName,
                    Permissions: selectedPermissions
                };

                var roleDtoUpdateJson = JSON.stringify(roleDtoUpdate);

                $.ajax({
                    url: '@Url.Action("UpdateRole", "Role")',
                    type: 'PUT', // Use PUT for update
                    contentType: 'application/json',
                    data: roleDtoUpdateJson,
                    success: function (response) {

                        if (response.statusCode === 200) {
                            showSuccessAlert(response.message, { autoClose: true, timeout: 3000 });
                            // Delay the reload after 2 seconds
                            setTimeout(function () {
                                location.reload();
                            }, 3000);
                        } else {
                            showErrorAlert(response.message, { autoClose: false });
                            setTimeout(function () {
                                location.reload();
                            }, 5000);
                        }
                    }
                });

                // Hide the update role modal
                $('#updateRoleModal').modal('hide');
            });

        });
    </script>
}